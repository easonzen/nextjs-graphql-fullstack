import Head from "next/head";
import { useRouter } from "next/router";
import { useCallback, useEffect, useState } from "react";
import { ApolloClient, InMemoryCache, gql } from "@apollo/client";

export default function Article() {
  const [states, setStates] = useState({
    book: {},
  });
  const router = useRouter();
  const { id } = router.query;

  const client = new ApolloClient({
    uri: "/api/graphql",
    cache: new InMemoryCache(),
  });

  const getArticles = useCallback(() => {
    if (!id) {
      return;
    }

    client
      .query({
        query: gql`
          query GetBook($bookId: ID!) {
            book(id: $bookId) {
              id
              title
              author
            }
          }
        `,
        variables: {
          bookId: id,
        },
      })
      .then((result) => {
        console.log(result);
        setStates({
          book: result.data.book,
        });
      });
  }, [id]);

  useEffect(() => {
    getArticles();
  }, [getArticles]);

  return (
    <div>
      <Head>
        <title>Article</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <p>Book ID: {states.book.id || "--"}</p>
        <p>Book Title: {states.book.title || "--"}</p>
        <p>Book Author: {states.book.author || "--"}</p>
      </main>
    </div>
  );
}
